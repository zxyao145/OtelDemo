{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Information",
        "System": "Information",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.EntityFrameworkCore.Database.Command": "Information",
        "Microsoft.AspNetCore.Hosting.Diagnostics": "Warning",
        "Microsoft.AspNetCore.Mvc.Infrastructure": "Warning",
        "Microsoft.AspNetCore.Routing.EndpointMiddleware": "Warning"
      }
    },
    "Using": [
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File",
      "Serilog.Enrichers.ClientInfo",
      "Serilog.Sinks.OpenTelemetry"
    ],
    "Enrich": [
      "FromLogContext",
      "WithClientIp",
      "WithThreadId"
    ],
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "{Timestamp:yyyy-MM-ddTHH:mm:ss.fffK}|{Level:u3}|{TraceId}-{SpanId}-{TraceFlags}|{Flag}|{SourceContext}#{Caller}({LineNumber})|{Message:lj}{NewLine}{Exception}",
          //"outputTemplate": "[{Timestamp:o} {Level:u3}][{TraceId}-{SpanId}-{TraceFlags}] [{Flag}] [{SourceContext}#{Caller}] {Message:lj}{NewLine}{Exception}",
          "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console"
          //"formatter": {
          //  "type": "Serilog.Templates.ExpressionTemplate, Serilog.Expressions"
          //}
        }
      },
      {
        "Name": "Default",
        "Args": {
          "configure": [
            {
              "Name": "File",
              "Args": {
                "rollingInterval": "Hour",
                "path": "logs/log-.log",
                "fileSizeLimitBytes": 40960,
                "buffered": false,
                "outputTemplate": "{Timestamp:yyyy-MM-ddTHH:mm:ss.fffK} [{Level:u3}] | [{TraceId}-{SpanId}-{TraceFlags}] | [{Flag}] | {SourceContext#{Caller}} | {Message:lj} | {Properties:j} {NewLine}{Exception}"
                //"outputTemplate": "[{Timestamp:o} {Level:u3}][{TraceId}-{SpanId}-{TraceFlags}] [{Flag}] [{SourceContext}#{Caller}] [{Message:lj}]{NewLine}{Exception}"
              }
            }
          ]
        }
      },
      {
        "Name": "Error",
        "Args": {
          "expression": "@Level in ['Error', 'Fatal']",
          "configureSink": [
            {
              "Name": "File",
              "Args": {
                "rollingInterval": "Hour",
                "path": "logs/log-error-.log",
                "fileSizeLimitBytes": 40960,
                "buffered": false,
                "outputTemplate": "{Timestamp:yyyy-MM-ddTHH:mm:ss.fffK} [{Level:u3}] | [{TraceId}-{SpanId}-{TraceFlags}] | [{Flag}] | {SourceContext#{Caller}} | {Message:lj} {NewLine}{Exception}"
                //"outputTemplate": "[{Timestamp:o} {Level:u3}][{TraceId}-{SpanId}-{TraceFlags}] [{Flag}] [{SourceContext}#{Caller}] [{Message:lj}]{NewLine}{Exception}"
              }
            }
          ]
        }
      },
      {
        "Name": "OpenTelemetry",
        "Args": {
          "Endpoint": "http://localhost:4317",
          "Protocol": "Grpc",
          // 对应 label
          "ResourceAttributes": {
            "service.name": "OtelDemo"
          }
        }
      }
    ]
  }
}
